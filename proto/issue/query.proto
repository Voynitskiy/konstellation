syntax = "proto3";
package konstellation.issue;

import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
// this line is used by starport scaffolding # 1
import "issue/coin_issue_denoms.proto";
import "issue/coin_issue_list.proto";
import "issue/issues_params.proto";
import "issue/issue_params.proto";
import "issue/issue_features.proto";
import "issue/params.proto";
import "issue/issues.proto";
import "issue/coin_issue_denom.proto";
import "issue/coin_issue.proto";
import "issue/address_freeze_list.proto";
import "issue/address_freeze.proto";
import "issue/freeze.proto";
import "issue/coins.proto";
import "issue/allowance_list.proto";
import "issue/allowance.proto";
import "issue/address.proto";

option go_package = "x/issue/types";

// Query defines the gRPC querier service.
service Query {
    // this line is used by starport scaffolding # 2

	// Queries a coinIssueDenoms by id.
	rpc CoinIssueDenoms(QueryGetCoinIssueDenomsRequest) returns (QueryGetCoinIssueDenomsResponse) {
		option (google.api.http).get = "/konstellation/issue/coinIssueDenoms/{id}";
	}

	// Queries a list of coinIssueDenoms items.
	rpc CoinIssueDenomsAll(QueryAllCoinIssueDenomsRequest) returns (QueryAllCoinIssueDenomsResponse) {
		option (google.api.http).get = "/konstellation/issue/coinIssueDenoms";
	}


	// Queries a coinIssueList by id.
	rpc CoinIssueList(QueryGetCoinIssueListRequest) returns (QueryGetCoinIssueListResponse) {
		option (google.api.http).get = "/konstellation/issue/coinIssueList/{id}";
	}

	// Queries a list of coinIssueList items.
	rpc CoinIssueListAll(QueryAllCoinIssueListRequest) returns (QueryAllCoinIssueListResponse) {
		option (google.api.http).get = "/konstellation/issue/coinIssueList";
	}


	// Queries a issuesParams by id.
	rpc IssuesParams(QueryGetIssuesParamsRequest) returns (QueryGetIssuesParamsResponse) {
		option (google.api.http).get = "/konstellation/issue/issuesParams/{id}";
	}

	// Queries a list of issuesParams items.
	rpc IssuesParamsAll(QueryAllIssuesParamsRequest) returns (QueryAllIssuesParamsResponse) {
		option (google.api.http).get = "/konstellation/issue/issuesParams";
	}


	// Queries a issueParams by id.
	rpc IssueParams(QueryGetIssueParamsRequest) returns (QueryGetIssueParamsResponse) {
		option (google.api.http).get = "/konstellation/issue/issueParams/{id}";
	}

	// Queries a list of issueParams items.
	rpc IssueParamsAll(QueryAllIssueParamsRequest) returns (QueryAllIssueParamsResponse) {
		option (google.api.http).get = "/konstellation/issue/issueParams";
	}


	// Queries a issueFeatures by id.
	rpc IssueFeatures(QueryGetIssueFeaturesRequest) returns (QueryGetIssueFeaturesResponse) {
		option (google.api.http).get = "/konstellation/issue/issueFeatures/{id}";
	}

	// Queries a list of issueFeatures items.
	rpc IssueFeaturesAll(QueryAllIssueFeaturesRequest) returns (QueryAllIssueFeaturesResponse) {
		option (google.api.http).get = "/konstellation/issue/issueFeatures";
	}


	// Queries a params by id.
	rpc Params(QueryGetParamsRequest) returns (QueryGetParamsResponse) {
		option (google.api.http).get = "/konstellation/issue/params/{id}";
	}

	// Queries a list of params items.
	rpc ParamsAll(QueryAllParamsRequest) returns (QueryAllParamsResponse) {
		option (google.api.http).get = "/konstellation/issue/params";
	}


	// Queries a issues by id.
	rpc Issues(QueryGetIssuesRequest) returns (QueryGetIssuesResponse) {
		option (google.api.http).get = "/konstellation/issue/issues/{id}";
	}

	// Queries a list of issues items.
	rpc IssuesAll(QueryAllIssuesRequest) returns (QueryAllIssuesResponse) {
		option (google.api.http).get = "/konstellation/issue/issues";
	}


	// Queries a coinIssueDenom by id.
	rpc CoinIssueDenom(QueryGetCoinIssueDenomRequest) returns (QueryGetCoinIssueDenomResponse) {
		option (google.api.http).get = "/konstellation/issue/coinIssueDenom/{id}";
	}

	// Queries a list of coinIssueDenom items.
	rpc CoinIssueDenomAll(QueryAllCoinIssueDenomRequest) returns (QueryAllCoinIssueDenomResponse) {
		option (google.api.http).get = "/konstellation/issue/coinIssueDenom";
	}


	// Queries a coinIssue by id.
	rpc CoinIssue(QueryGetCoinIssueRequest) returns (QueryGetCoinIssueResponse) {
		option (google.api.http).get = "/konstellation/issue/coinIssue/{denom}";
	}

	// Queries a list of coinIssue items.
	rpc CoinIssueAll(QueryAllCoinIssueRequest) returns (QueryAllCoinIssueResponse) {
		option (google.api.http).get = "/konstellation/issue/coinIssue";
	}


	// Queries a addressFreezeList by id.
	rpc AddressFreezeList(QueryGetAddressFreezeListRequest) returns (QueryGetAddressFreezeListResponse) {
		option (google.api.http).get = "/konstellation/issue/addressFreezeList/{id}";
	}

	// Queries a list of addressFreezeList items.
	rpc AddressFreezeListAll(QueryAllAddressFreezeListRequest) returns (QueryAllAddressFreezeListResponse) {
		option (google.api.http).get = "/konstellation/issue/addressFreezeList";
	}


	// Queries a addressFreeze by id.
	rpc AddressFreeze(QueryGetAddressFreezeRequest) returns (QueryGetAddressFreezeResponse) {
		option (google.api.http).get = "/konstellation/konstellation/x/issue/addressFreeze/{id}";
	}

	// Queries a list of addressFreeze items.
	rpc AddressFreezeAll(QueryAllAddressFreezeRequest) returns (QueryAllAddressFreezeResponse) {
		option (google.api.http).get = "/konstellation/issue/addressFreeze";
	}


	// Queries a freeze by id.
	rpc Freeze(QueryGetFreezeRequest) returns (QueryGetFreezeResponse) {
		option (google.api.http).get = "/konstellation/issue/freeze/{denom}/{holder}";
	}

	// Queries a list of freeze items.
	rpc FreezeAll(QueryAllFreezeRequest) returns (QueryAllFreezeResponse) {
		option (google.api.http).get = "/konstellation/issue/freeze";
	}


	// Queries a coins by id.
	rpc Coins(QueryGetCoinsRequest) returns (QueryGetCoinsResponse) {
		option (google.api.http).get = "/konstellation/issue/coins/{id}";
	}

	// Queries a list of coins items.
	rpc CoinsAll(QueryAllCoinsRequest) returns (QueryAllCoinsResponse) {
		option (google.api.http).get = "/konstellation/issue/coins";
	}


	// Queries a allowanceList by id.
	rpc AllowanceList(QueryGetAllowanceListRequest) returns (QueryGetAllowanceListResponse) {
		option (google.api.http).get = "/konstellation/issue/allowanceList/{id}";
	}

	// Queries a list of allowanceList items.
	rpc AllowanceListAll(QueryAllAllowanceListRequest) returns (QueryAllAllowanceListResponse) {
		option (google.api.http).get = "/konstellation/issue/allowanceList";
	}


	// Queries a allowance by id.
	rpc Allowance(QueryGetAllowanceRequest) returns (QueryGetAllowanceResponse) {
		option (google.api.http).get = "/konstellation/issue/allowance/{owner}/{spender}/{denom}";
	}

	// Queries a list of allowance items.
	rpc AllowanceAll(QueryAllAllowanceRequest) returns (QueryAllAllowanceResponse) {
		option (google.api.http).get = "/konstellation/issue/allowance";
	}


	// Queries a address by id.
	rpc Address(QueryGetAddressRequest) returns (QueryGetAddressResponse) {
		option (google.api.http).get = "/konstellation/issue/address/{id}";
	}

	// Queries a list of address items.
	rpc AddressAll(QueryAllAddressRequest) returns (QueryAllAddressResponse) {
		option (google.api.http).get = "/konstellation/issue/address";
	}

}

// this line is used by starport scaffolding # 3
message QueryGetCoinIssueDenomsRequest {
	uint64 id = 1;
}

message QueryGetCoinIssueDenomsResponse {
	CoinIssueDenoms CoinIssueDenoms = 1;
}

message QueryAllCoinIssueDenomsRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllCoinIssueDenomsResponse {
	repeated CoinIssueDenoms CoinIssueDenoms = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
message QueryGetCoinIssueListRequest {
	uint64 id = 1;
}

message QueryGetCoinIssueListResponse {
	CoinIssueList CoinIssueList = 1;
}

message QueryAllCoinIssueListRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllCoinIssueListResponse {
	repeated CoinIssueList CoinIssueList = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
message QueryGetIssuesParamsRequest {
	uint64 id = 1;
}

message QueryGetIssuesParamsResponse {
	IssuesParams IssuesParams = 1;
}

message QueryAllIssuesParamsRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
	IssuesParams params = 2;
}

message QueryAllIssuesParamsResponse {
	repeated IssuesParams IssuesParams = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
message QueryGetIssueParamsRequest {
	uint64 id = 1;
}

message QueryGetIssueParamsResponse {
	IssueParams IssueParams = 1;
}

message QueryAllIssueParamsRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllIssueParamsResponse {
	repeated IssueParams IssueParams = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
message QueryGetIssueFeaturesRequest {
	uint64 id = 1;
}

message QueryGetIssueFeaturesResponse {
	IssueFeatures IssueFeatures = 1;
}

message QueryAllIssueFeaturesRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllIssueFeaturesResponse {
	repeated IssueFeatures IssueFeatures = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
message QueryGetParamsRequest {
	uint64 id = 1;
}

message QueryGetParamsResponse {
	Params Params = 1;
}

message QueryAllParamsRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllParamsResponse {
	repeated Params Params = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
message QueryGetIssuesRequest {
	uint64 id = 1;
}

message QueryGetIssuesResponse {
	Issues Issues = 1;
}

message QueryAllIssuesRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllIssuesResponse {
	repeated Issues Issues = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
message QueryGetCoinIssueDenomRequest {
	uint64 id = 1;
}

message QueryGetCoinIssueDenomResponse {
	CoinIssueDenom CoinIssueDenom = 1;
}

message QueryAllCoinIssueDenomRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllCoinIssueDenomResponse {
	repeated CoinIssueDenom CoinIssueDenom = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
message QueryGetCoinIssueRequest {
	uint64 id = 1;
	string denom = 2;
}

message QueryGetCoinIssueResponse {
	CoinIssue CoinIssue = 1;
}

message QueryAllCoinIssueRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllCoinIssueResponse {
	repeated CoinIssue CoinIssue = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
message QueryGetAddressFreezeListRequest {
	uint64 id = 1;
}

message QueryGetAddressFreezeListResponse {
	AddressFreezeList AddressFreezeList = 1;
}

message QueryAllAddressFreezeListRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllAddressFreezeListResponse {
	repeated AddressFreezeList AddressFreezeList = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
message QueryGetAddressFreezeRequest {
	uint64 id = 1;
}

message QueryGetAddressFreezeResponse {
	AddressFreeze AddressFreeze = 1;
}

message QueryAllAddressFreezeRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllAddressFreezeResponse {
	repeated AddressFreeze AddressFreeze = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
message QueryGetFreezeRequest {
	uint64 id = 1;
	string denom = 2;
	string holder = 3;
}

message QueryGetFreezeResponse {
	Freeze Freeze = 1;
}

message QueryAllFreezeRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
	string denom = 2;
}

message QueryAllFreezeResponse {
	repeated Freeze Freeze = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
message QueryGetCoinsRequest {
	uint64 id = 1;
}

message QueryGetCoinsResponse {
	Coins Coins = 1;
}

message QueryAllCoinsRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllCoinsResponse {
	repeated Coins Coins = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
message QueryGetAllowanceListRequest {
	uint64 id = 1;
}

message QueryGetAllowanceListResponse {
	AllowanceList AllowanceList = 1;
}

message QueryAllAllowanceListRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllAllowanceListResponse {
	repeated AllowanceList AllowanceList = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
message QueryGetAllowanceRequest {
	uint64 id = 1;
	string owner = 2;
	string spender = 3;
	string denom = 4;
}

message QueryGetAllowanceResponse {
	Allowance Allowance = 1;
}

message QueryAllAllowanceRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
	string owner = 2;
	string denom = 3;
}

message QueryAllAllowanceResponse {
	repeated Allowance Allowance = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
message QueryGetAddressRequest {
	uint64 id = 1;
}

message QueryGetAddressResponse {
	Address Address = 1;
}

message QueryAllAddressRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllAddressResponse {
	repeated Address Address = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
