syntax = "proto3";

package konstellation.issue;

import "gogoproto/gogo.proto";
import "issue/issue_features.proto";
import "issue/coin_issue.proto";
import "issue/coins.proto";
import "issue/issue_params.proto";

// this line is used by starport scaffolding # proto/tx/import

option go_package = "x/issue/types";

// Msg defines the Msg service.
service Msg {
  rpc Freeze(MsgFreeze) returns (MsgFreezeResponse);
    // this line is used by starport scaffolding # proto/tx/rpc
  rpc Unfreeze(MsgUnfreeze) returns (MsgUnfreezeResponse);
  rpc BurnFrom(MsgBurnFrom) returns (MsgBurnFromResponse);
  rpc Burn(MsgBurn) returns (MsgBurnResponse);
  rpc Mint(MsgMint) returns (MsgMintResponse);
  rpc DecreaseAllowance(MsgDecreaseAllowance) returns (MsgDecreaseAllowanceResponse);
  rpc IncreaseAllowance(MsgIncreaseAllowance) returns (MsgIncreaseAllowanceResponse);
  rpc Approve(MsgApprove) returns (MsgApproveResponse);
  rpc TransferOwnership(MsgTransferOwnership) returns (MsgTransferOwnershipResponse);
  rpc TransferFrom(MsgTransferFrom) returns (MsgTransferFromResponse);
  rpc Transfer(MsgTransfer) returns (MsgTransferResponse);
  rpc Features(MsgFeatures) returns (MsgFeaturesResponse);
  rpc EnableFeature(MsgEnableFeature) returns (MsgEnableFeatureResponse);
  rpc DisableFeature(MsgDisableFeature) returns (MsgDisableFeatureResponse);
  rpc Description(MsgDescription) returns (MsgDescriptionResponse);
  rpc IssueCreate(MsgIssueCreate) returns (MsgIssueCreateResponse);
}

message MsgFreeze {
  string freezer = 1 [(gogoproto.moretags) = "yaml:\"freezer\""];
  string holder = 2 [(gogoproto.moretags) = "yaml:\"holder\""];
  string denom = 3;
  string op = 4;
}

message MsgFreezeResponse {
}


// this line is used by starport scaffolding # proto/tx/message
message MsgUnfreeze {
  string freezer = 1 [(gogoproto.moretags) = "yaml:\"freezer\""];
  string holder = 2 [(gogoproto.moretags) = "yaml:\"holder\""];
  string denom = 3;
  string op = 4;
}

message MsgUnfreezeResponse {
}

message MsgBurnFrom {
  string burner = 1 [(gogoproto.moretags) = "yaml:\"burner\""];
  string from_address = 2 [(gogoproto.moretags) = "yaml:\"from_address\""];
  Coins amount = 3;
}

message MsgBurnFromResponse {
}

message MsgBurn {
  string burner = 1 [(gogoproto.moretags) = "yaml:\"burner\""];
  Coins amount = 2;
}

message MsgBurnResponse {
}

message MsgMint {
  string minter = 1 [(gogoproto.moretags) = "yaml:\"minter\""];
  string to_address = 2 [(gogoproto.moretags) = "yaml:\"to_address\""];
  Coins amount = 3;
}

message MsgMintResponse {
}

message MsgDecreaseAllowance {
  string owner = 1 [(gogoproto.moretags) = "yaml:\"owner\""];
  string spender = 2 [(gogoproto.moretags) = "yaml:\"spender\""];
  Coins amount = 3;
}

message MsgDecreaseAllowanceResponse {
}

message MsgIncreaseAllowance {
  string owner = 1 [(gogoproto.moretags) = "yaml:\"owner\""];
  string spender = 2 [(gogoproto.moretags) = "yaml:\"spender\""];
  Coins amount = 3;
}

message MsgIncreaseAllowanceResponse {
}

message MsgApprove {
  string owner = 1 [(gogoproto.moretags) = "yaml:\"owner\""];
  string spender = 2 [(gogoproto.moretags) = "yaml:\"spender\""];
  Coins amount = 3;
}

message MsgApproveResponse {
}

message MsgTransferOwnership {
  string owner = 1 [(gogoproto.moretags) = "yaml:\"owner\""];
  string denom = 2;
  string to_address = 3 [(gogoproto.moretags) = "yaml:\"to_address\""];
}

message MsgTransferOwnershipResponse {
}

message MsgTransferFrom {
  string sender = 1 [(gogoproto.moretags) = "yaml:\"sender\""];
  string from_address = 2 [(gogoproto.moretags) = "yaml:\"from_address\""];
  string to_address = 3 [(gogoproto.moretags) = "yaml:\"to_address\""];
  Coins amount = 4;
}

message MsgTransferFromResponse {
}

message MsgTransfer {
  string from_address = 1 [(gogoproto.moretags) = "yaml:\"from_address\""];
  string to_address = 2 [(gogoproto.moretags) = "yaml:\"to_address\""];
  Coins amount = 3;
}

message MsgTransferResponse {
}

message MsgFeatures {
  string owner = 1 [(gogoproto.moretags) = "yaml:\"owner\""];
  string denom = 2;
  IssueFeatures issue_features = 3 [(gogoproto.embed) = true];
}

message MsgFeaturesResponse {
}

message MsgEnableFeature {
  string owner = 1 [(gogoproto.moretags) = "yaml:\"owner\""];
  string denom = 2;
  string feature = 3;
}

message MsgEnableFeatureResponse {
}

message MsgDisableFeature {
  string owner = 1 [(gogoproto.moretags) = "yaml:\"owner\""];
  string denom = 2;
  string feature = 3;
}

message MsgDisableFeatureResponse {
}

message MsgDescription {
  string owner = 1 [(gogoproto.moretags) = "yaml:\"owner\""];
  string denom = 2;
  string description = 3;
}

message MsgDescriptionResponse {
}

message MsgIssueCreate {
  string owner = 1;
  string issuer = 2;
  IssueParams issue_params = 3 [(gogoproto.embed) = true];
}

message MsgIssueCreateResponse {
	CoinIssue amount = 1;
}
